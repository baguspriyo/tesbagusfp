[{"/home/bagus/frontend-deployment-final-project-v1/src/index.js":"1","/home/bagus/frontend-deployment-final-project-v1/src/App.js":"2","/home/bagus/frontend-deployment-final-project-v1/src/routes/Home.jsx":"3","/home/bagus/frontend-deployment-final-project-v1/src/routes/EditPhoto.jsx":"4","/home/bagus/frontend-deployment-final-project-v1/src/routes/Photos.jsx":"5","/home/bagus/frontend-deployment-final-project-v1/src/routes/AddPhoto.jsx":"6","/home/bagus/frontend-deployment-final-project-v1/src/routes/NotFound.jsx":"7","/home/bagus/frontend-deployment-final-project-v1/src/components/Card.jsx":"8"},{"size":325,"mtime":1671259712465,"results":"9","hashOfConfig":"10"},{"size":997,"mtime":1671264640591,"results":"11","hashOfConfig":"10"},{"size":233,"mtime":1671259712465,"results":"12","hashOfConfig":"10"},{"size":2425,"mtime":1671262479707,"results":"13","hashOfConfig":"10"},{"size":2977,"mtime":1671262496187,"results":"14","hashOfConfig":"10"},{"size":2430,"mtime":1671262468091,"results":"15","hashOfConfig":"10"},{"size":197,"mtime":1671259712465,"results":"16","hashOfConfig":"10"},{"size":564,"mtime":1671259712465,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xiqsl8",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bagus/frontend-deployment-final-project-v1/src/index.js",[],[],"/home/bagus/frontend-deployment-final-project-v1/src/App.js",[],[],"/home/bagus/frontend-deployment-final-project-v1/src/routes/Home.jsx",[],[],"/home/bagus/frontend-deployment-final-project-v1/src/routes/EditPhoto.jsx",["45","46"],[],"import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst EditPhoto = () => {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [captions, setCaptions] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [isSubmit, setSubmit] = useState(false)\n  const [error, setError] = useState(false);\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const objData = {\n    imageUrl: imageUrl,\n    captions: captions,\n    createdAt: \"2022-12-12\",\n    updatedAt: \"2022-12-12\",\n    secret: \"password\",\n    id: id\n  }\n\n  const editPhoto = async (e) => {\n    e.preventDefault()\n      const response = await fetch(`https://gallery-app-server.vercel.app/photos`, {\n        method:\"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(objData)\n      })\n      navigate(\"/photos\")\n  };\n\n  const detailPhoto = async (id) => {\n    try{\n      const url = `https://gallery-app-server.vercel.app/photos`\n      const response = await fetch(url)\n      const data = await response.json()\n      setImageUrl(data.imageUrl)\n      setCaptions(data.captions)\n    }catch(e){\n      setError(e)\n    }\n  }\n\n\n  useEffect(() => {\n    setLoading(true);\n    detailPhoto(id)\n    setLoading(false)\n  }, [id]);\n\n  if (error) return <div>Error!</div>;\n\n  return (\n    <>\n      {loading ? (\n        <h1 style={{ width: \"100%\", textAlign: \"center\", marginTop: \"20px\" }}>\n          Loading...\n        </h1>\n      ) : (\n        <div className=\"container\">\n          <form className=\"edit-form\" onSubmit={editPhoto}>\n            <label>\n              Image Url:\n              <input\n                className=\"edit-input\"\n                type=\"text\"\n                value={imageUrl}\n                onChange={(e) => setImageUrl(e.target.value)}\n              />\n            </label>\n            <label>\n              Captions:\n              <input\n                className=\"edit-input\"\n                type=\"text\"\n                value={captions}\n                data-testid=\"captions\"\n                onChange={(e) => setCaptions(e.target.value)}\n              />\n            </label>\n            <input className=\"submit-btn\" type=\"submit\" value=\"Submit\" data-testid=\"submit\" onClick={() => setSubmit(true)}/>\n          </form>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default EditPhoto;","/home/bagus/frontend-deployment-final-project-v1/src/routes/Photos.jsx",["47"],[],"import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Card from \"../components/Card\";\n\nconst Photos = () => {\n  const [photos, setPhotos] = useState([]);\n  const [sort, setSort] = useState(\"asc\");\n  const [submited, setSubmited] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const deletePhoto = async (id) => {\n    const response = await fetch(`https://gallery-app-server.vercel.app/photos`, {\n      method: \"DELETE\"\n    })\n    .then((response) => response.json())\n    .then((response) => {\n      setPhotos(response => {\n        return response.filter(photo => \n          photo.id !== id\n        )\n      })\n    })\n  };\n\n  const dataFetch = async () => {\n    try{\n      const url = \"https://gallery-app-server.vercel.app/photos\"\n      const response = await fetch(url)\n      const data = await response.json()\n      setPhotos(data)\n    }catch(e){\n      setError(e)\n    }\n  }\n\n  const dataSort = async (order, search) => {\n    try{\n      const url = `https://gallery-app-server.vercel.app/photos`\n      const response = await fetch(url)\n      const data = await response.json()\n      setPhotos(data)\n    }catch(e){\n      setError(e)\n    }\n  }\n\n\n  useEffect(() => {\n    setLoading(true);\n    dataSort(sort, submited)\n    setLoading(false)\n  }, [sort, submited]);\n\n  useEffect(() => {\n    setLoading(true);\n    dataFetch()\n    setLoading(false)\n  }, []);\n\n  if (error) return <h1 style={{ width: \"100%\", textAlign: \"center\", marginTop: \"20px\" }} >Error!</h1>;\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"options\">\n          <select\n            onChange={(e) => setSort(e.target.value)}\n            data-testid=\"sort\"\n            className=\"form-select\"\n            style={{}}\n          >\n            <option value=\"asc\">Ascending</option>\n            <option value=\"desc\">Descending</option>\n          </select>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              setSubmited(search);\n            }}\n          >\n            <input\n              type=\"text\"\n              data-testid=\"search\"\n              onChange={(e) => setSearch(e.target.value)}\n              className=\"form-input\"\n            />\n            <input\n              type=\"submit\"\n              value=\"Search\"\n              data-testid=\"submit\"\n              className=\"form-btn\"\n            />\n          </form>\n        </div>\n        <div className=\"content\">\n          {loading ? (\n            <h1\n              style={{ width: \"100%\", textAlign: \"center\", marginTop: \"20px\" }}\n            >\n              Loading...\n            </h1>\n          ) : (\n            photos.map((photo) => {\n              return (\n                <Card key={photo.id} photo={photo} deletePhoto={deletePhoto} />\n              );\n            })\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Photos;","/home/bagus/frontend-deployment-final-project-v1/src/routes/AddPhoto.jsx",["48"],[],"import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AddPhoto = () => {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [captions, setCaptions] = useState(\"\");\n  const [secret, setSecret] = useState(\"\");\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const addPhoto = async (e) => {\n    try{\n      e.preventDefault();\n\n      // object berisi data yang akan dipost\n      const makeData = {\n        imageUrl,\n        captions,\n        createdAt: \"2022-11-12\",\n        updatedAt: \"2022-11-12\", \n        secret\n      }\n      \n      if(secret === \"password\"){ //pengecekan apakah secret yang dimasukkan bernilai password\n        const response = await fetch(\"https://gallery-app-server.vercel.app/photos\", { //fetch url\n          method: \"POST\", //request API dengan method POST\n          headers: {\n            \"Content-Type\": \"application/json\" //value dari headers\n          },\n          body: JSON.stringify(makeData) //mengisi body dengan object makeData\n        })\n        navigate(\"/photos\") //ketika berhasil di post akan mengalihkan halaman ke photos\n      }else{\n        setError(\"You are not authorized\") //pesan eror\n      }\n    }catch(e){\n      console.log(e)\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n      {error && <div className=\"error-msg\">{error}</div>}\n        <form className=\"add-form\"  onSubmit={addPhoto}>\n          <label>\n            Image Url:\n            <input\n              className=\"add-input\"\n              type=\"text\"\n              data-testid=\"imageUrl\"\n              value={imageUrl}\n              onChange={(e) => setImageUrl(e.target.value)}\n            />\n          </label>\n          <label>\n            Captions:\n            <input\n              className=\"add-input\"\n              type=\"text\"\n              data-testid=\"captions\"\n              value={captions}\n              onChange={(e) => setCaptions(e.target.value)}\n            />\n          </label>\n          <label>\n            Secret:\n            <input\n              className=\"add-input\"\n              type=\"text\"\n              value={secret}\n              data-testid=\"secret\"\n              onChange={(e) => setSecret(e.target.value)}\n            />\n          </label>\n          <input className=\"submit-btn\" type=\"submit\" value=\"Submit\" data-testid=\"submit\" />\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default AddPhoto;","/home/bagus/frontend-deployment-final-project-v1/src/routes/NotFound.jsx",[],[],"/home/bagus/frontend-deployment-final-project-v1/src/components/Card.jsx",[],[],{"ruleId":"49","severity":1,"message":"50","line":9,"column":10,"nodeType":"51","messageId":"52","endLine":9,"endColumn":18},{"ruleId":"49","severity":1,"message":"53","line":25,"column":13,"nodeType":"51","messageId":"52","endLine":25,"endColumn":21},{"ruleId":"49","severity":1,"message":"53","line":14,"column":11,"nodeType":"51","messageId":"52","endLine":14,"endColumn":19},{"ruleId":"49","severity":1,"message":"53","line":25,"column":15,"nodeType":"51","messageId":"52","endLine":25,"endColumn":23},"no-unused-vars","'isSubmit' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used."]